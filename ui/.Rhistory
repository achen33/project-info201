select(population) %>%
pluck(1)
usa_population <- population_table %>%
filter(country == "United States") %>%
select(population) %>%
pluck(1)
population_table <- israel_us %>%
filter(year == "2018") %>%
select(population , country)
israel_population <- population_table %>%
filter(country == "Israel") %>%
select(population) %>%
pluck(1)
usa_population <- population_table %>%
filter(country == "United States") %>%
select(population) %>%
pluck(1)
#
pop_difference <- (usa_population -  israel_population)
israel_energy_pc <- israel_us %>%
filter(country == "Israel") %>%
filter(year == "2000" | year == "2016") %>%
select(energy_per_capita, year)
isr_energy_2000 <- israel_energy_pc %>%
filter (year == "2000") %>%
select(energy_per_capita) %>%
pluck(1)
isr_energy_2016 <- israel_energy_pc %>%
filter (year == "2016") %>%
select(energy_per_capita) %>%
pluck(1)
#
isr_diff_energy_pc <- isr_energy_2000 - isr_energy_2016
usa_energy_pc <- israel_us %>%
filter(country == "United States") %>%
filter(year == "2000" | year == "2016") %>%
select(energy_per_capita, year)
usa_energy_2000 <- usa_energy_pc %>%
filter (year == "2000") %>%
select(energy_per_capita) %>%
pluck(1)
usa_energy_2016 <- usa_energy_pc %>%
filter (year == "2016") %>%
select(energy_per_capita) %>%
pluck(1)
#
usa_diff_energy_pc <- usa_energy_2000 - usa_energy_2016
isr_max_co2_year <- israel_us %>%
filter(country == "Israel")
#
isr_max_year_co2 = summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
isr_max_year_co2
summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
runApp('Desktop/info_201/a4-hadardolev/ui')
usa_max_co2_year <- israel_us %>%
filter(country == "United States")
usa_max_year_co2 = summarise(usa_max_co2_year,
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
View(usa_max_year_co2)
usa_max_co2_year <- israel_us %>%
filter(country == "United States")
summarise(usa_max_co2_year,
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita)
pluck(1)
isr_max_year_co2 = summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita)
pluck(1)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita) %>%
pluck(1)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE))
View(usa_max_year_co2)
usa_max_co2_year <- israel_us %>%
filter(country == "United States")
View(usa_max_year_co2)
usa_max_co2_year <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States")
View(usa_max_year_co2)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States")
View(usa_max_co2_years)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
filter(gas_co2_per_capita == usa_max_year_co2)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
filter(gas_co2_per_capita == usa_max_year_co2)
#change over time of consumption co2 per captia 2000 -> 2018 USA
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE))
usa_max_year_co2
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
filter(year == usa_max_year_co2)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE))
View(usa_max_co2_years)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States")
View(usa_max_co2_years)
isr_max_co2_year <- israel_us %>%
filter(country == "Israel")
isr_max_year_co2 = summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
isr_max_year_co2
isr_max_year_co2
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "Israel") %>%
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
usa_max_year_co2
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "Israel")
usa_max_co2_years
runApp('Desktop/info_201/a4-hadardolev/ui')
vis_page <- tabPanel(
"Visualization Page",
sidebarLayout( # lay out passed content into 2 cols
sidebarPanel( # lay out passed content inside 'sidebar' col
p("Consumption CO2 per capita"),
selectInput(
inputId = "country",
label = h3("Choose a country"),
choices = israel_us$country
)
),
mainPanel( # lay out passed content in 'main' col
h2("Climate Change Visualization"),
p("This is where I display an interactive visualization and do my analysis"),
plotOutput(outputId = "consumption_co2_per_capita")
)
)
)
install.packages("manipulateWidget")
shinyServer(function(input, output) {
output$consumption_co2_per_capita <- renderPlot({
updated <- israel_us %>%
filter(country == input$country) %>%
select(consumption_co2_per_capita, year, country)
ggplot(data = updated) +
geom_line(mapping = aes(x = year, y = consumption_co2_per_capita)) +
labs(x = "year", y = "Consumption of CO2 per Capita")+
xlim(1990, 2018)
})
})
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
intro_page <- tabPanel(
"Introduction",
mainPanel(
h2("Climate change in Israel and United States"),
p("As a Israeli American student, being aware of how both the countries
I call home try to limit their footprint in climate change. As both Israel
and the US are very technology advanced, its intresting to see how they chose
to use it for the fight against climate change. Since the US has 318714000 more
residents than Israel, my tables and stats are all based on per capita.
The hange over time of energy consumption per capita used in 2000-2016
in israel is 3691.67 while in the USA its 13553.The year where there was the max
consumption of CO2 per capita in the US was 2014 and Israel was 2018."),
img( src = "https://clayhiggins.house.gov/sites/clayhiggins.house.gov/files/styles/congress_featured_image/public/featured_image/usa-israel.png?itok=TfoYlpB4")
)
)
# visualization page
vis_page <- tabPanel(
"Visualization Page",
sidebarLayout( # lay out passed content into 2 cols
sidebarPanel(
p("Consumption CO2 per capita"),
selectInput(
inputId = "country",
label = h3("Choose a country"),
choices = israel_us$country
)
),
mainPanel( # lay out passed content in 'main' col
h2("Climate Change Visualization"),
plotOutput(outputId = "consumption_co2_per_capita"),
p("As shown in the charts above both Israel and the US have been taking action to consume less CO2. Currently, Israel consumes less
CO2 than the USA. It's interesting to look at the USA and how the numbers change based on the president of the time. I was surprised to see
the slope after 2009 when Obama was president, and how during Trumps
the term the slop was less steep.")
)
)
)
ui <- fluidPage(
h1("Climate Change POV"),
navbarPage(
inverse = TRUE,
"Climate Change Demo",
intro_page,
vis_page
)
)
shiny::runApp('Desktop/info_201_group/project-info201/ui')
runApp('~/Desktop/info_201/a4-hadardolev/ui')
climate <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
climate <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
runApp('Desktop/info_201/a4-hadardolev/ui')
runApp('Desktop/info_201_group/project-info201/ui')
# Load data
county_statistics <- read.csv("data/county_statistics (1).csv")
# Load data
county_statistics <- read.csv("data/county_statistics (1).csv")
county_statistics <- read.csv("data/county_statistics (1).csv")
bar_2020_data <- county_statistics %>%
select(state, total_votes20) %>%
group_by(state) %>%
summarize(state_total = sum(total_votes20, na.rm = TRUE)) %>%
mutate(state_total)
bar_2020 <- ggplot(data = bar_2020_data) +
geom_col(mapping = aes(x = state, y = state_total)) +
ggtitle("Total Votes by State in 2020 President Election")
bar_2020
library(tidyverse)
library(ggplot2)
# Load data
county_statistics <- read.csv("data/county_statistics (1).csv")
View(county_statistics)
setwd("~/Desktop/info_201_group/project-info201")
# Load data
county_statistics <- read.csv("data/county_statistics (1).csv")
bar_2020_data <- county_statistics %>%
select(state, total_votes20) %>%
group_by(state) %>%
summarize(state_total = sum(total_votes20, na.rm = TRUE)) %>%
mutate(state_total)
bar_2020 <- ggplot(data = bar_2020_data) +
geom_col(mapping = aes(x = state, y = state_total)) +
ggtitle("Total Votes by State in 2020 President Election")
bar_2020
runApp('ui')
runApp('ui')
runApp('ui')
runApp('ui')
runApp('ui')
bar_2020_data <- county_statistics %>%
select(state, total_votes20) %>%
group_by(state) %>%
summarize(state_total = sum(total_votes20, na.rm = TRUE)) %>%
mutate(state_total) %>%
filter(state == input$state)
ar_2020_data <- county_statistics %>%
select(state, total_votes20) %>%
group_by(state) %>%
summarize(state_total = sum(total_votes20, na.rm = TRUE)) %>%
mutate(state_total) %>%
filter(state == input$state)
bar_2020_data <- county_statistics %>%
select(state, total_votes20) %>%
group_by(state) %>%
summarize(state_total = sum(total_votes20, na.rm = TRUE)) %>%
mutate(state_total) %>%
filter(state == input$state)
bar_2020_data <- county_statistics %>%
select(state, total_votes20) %>%
filter(state == input$state) %>%
group_by(state) %>%
summarize(state_total = sum(total_votes20, na.rm = TRUE)) %>%
mutate(state_total)
runApp('ui')
runApp('ui')
runApp('ui')
runApp('ui')
runApp('ui')
runApp('ui')
runApp('ui')
voting_results <- county_statistics %>%
select( votes20_Donald_Trump, votes20_Joe_Biden, state) %>%
group_by(state) %>%
summarise(difference_votes = abs(votes20_Donald_Trump - votes20_Joe_Biden)) %>%
mutate(difference_votes)
voting_results
View(voting_results)
View(voting_results)
voting_results <- county_statistics %>%
select( votes20_Donald_Trump, votes20_Joe_Biden, state) %>%
group_by(state) %>%
summarise(difference_votes = abs(votes20_Donald_Trump - votes20_Joe_Biden)) %>%
mutate(difference_votes)
View(voting_results)
runApp('ui')
votes_2020_data <- county_statistics %>%
group_by(state) %>%
filter(state == "AZ" | state == "CO" | state == "FL" | state == "GA"
| state == "IA" | state == "MI" | state == "NC" | state == "PA"
| state == "TX" | state == "WI") %>%
summarize(
voted_trump = sum(votes20_Donald_Trump, na.rm = TRUE),
voted_biden = sum(votes20_Joe_Biden, na.rm = TRUE)
)
votes_2020 <- ggplot(data = votes_2020_data) +
geom_point(mapping = aes(
x = voted_trump,
y = voted_biden,
color = state
)) +
ggtitle("Comparison of State Votes for Trump vs. Biden")
votes_2020
runApp('ui')
setwd("~/Desktop/info_201_group/project-info201")
runApp('ui')
library(shiny)
library(tidyverse)
library(plotly)
library(rsconnect)
library(dplyr)
county_statistics_1_copy <- read_csv("county_statistics (1) copy.csv")
us_election <- county_statistics_1_copy %>%
select(state, votes20_Donald_Trump, votes20_Joe_Biden, total_votes20, TotalPop, county, White, Asian, Black, Hispanic, Pacific)
#filter(iso_code != "")
# First Tab which includes the introduction.
intro_panel <- tabPanel(
"Introduction",
titlePanel("title of project"),
p("By: Audrey, Selina, Hadar"),
h3("Introduction"),
img(src = "https://i.guim.co.uk/img/media/ea344028ac2fe5a1c1db9d55adcfaf01951f7777/0_60_3500_2100/master/3500.jpg?width=445&quality=85&auto=format&fit=max&s=433342dd5a78238a336fc994602d1bda",height="400", width="600"),
p("introduction"),
p(
"This is our report of the Labor Force Statistics Dataset from the ",
a(href = "https://data.bls.gov/cgi-bin/surveymost?ln", "U.S. Bureau of Labor Statistics"),
)
)
# widgets for education graph
# total votes
total_votes_sidebar <- sidebarPanel(
p("Find population"),
selectInput(
inputId = "state",
label = h3("Choose a state"),
choices = us_election$state
)
)
# education graph itself
# population
total_votes_content <- mainPanel(
plotlyOutput("total_votes_graph")
)
# education tab
# population
total_votes_panel <- tabPanel(
"Total Votes",
titlePanel("total votes of each state"),
sidebarLayout(total_votes_sidebar,
total_votes_content)
)
# widgets for gender graph
# race
race_sidebar <- sidebarPanel(
checkboxGroupInput("select", label = h3("Check Race"),
choices = list("White" = us_election$White, "Black" = us_election$Black,
"Hispanic" = us_election$Hispanic, "Native" = us_election$Native,
"Pacific" = us_election$Pacific, "Asian" = us_election$Asian),
selected = 1),
)
# education gender itself
# race
race_content <- mainPanel(
plotOutput("race_graph")
)
# gender tab
# Race
race_panel <- tabPanel(
"Race Graph",
titlePanel("graph title here"),
sidebarLayout(race_sidebar,
race_content)
)
# widgets for race graph
# vote
vote_sidebar <- sidebarPanel(
radioButtons("radio", label = h3("Choose a state"),
choices = list("AZ" = state | state == "CO" | state == "FL" | state == "GA"
| state == "IA" | state == "MI" | state == "NC" | state == "PA"
| state == "TX" | state == "WI"),
selected = 1),
)
# race gender itself
# vote
vote_content <- mainPanel(
plotOutput("vote_graph")
)
# race tab
# vote
vote_panel <- tabPanel(
"Votes Graph",
titlePanel("graph title here"),
sidebarLayout(vote_sidebar,
vote_content)
)
# First Tab which includes the introduction.
summary_panel <- tabPanel(
"Summary",
titlePanel("Summary and Takeaways"),
h3("Education Takeaway"),
p("Our conclusion here blah blah blah")
)
# Create overall ui by calling the into panel and plot panel
ui <- navbarPage(
"US Election",
intro_panel,
total_votes_panel,
race_panel,
vote_panel,
summary_panel
)
county_statistics_1_copy <- read_csv("county_statistics (1) copy.csv")
us_election <- county_statistics_1_copy %>%
select(state, votes20_Donald_Trump, votes20_Joe_Biden, total_votes20, TotalPop, county, White, Asian, Black, Hispanic, Pacific)
#filter(iso_code != "")
intro_panel <- tabPanel(
"Introduction",
titlePanel("title of project"),
p("By: Audrey, Selina, Hadar"),
h3("Introduction"),
img(src = "https://i.guim.co.uk/img/media/ea344028ac2fe5a1c1db9d55adcfaf01951f7777/0_60_3500_2100/master/3500.jpg?width=445&quality=85&auto=format&fit=max&s=433342dd5a78238a336fc994602d1bda",height="400", width="600"),
p("introduction"),
p(
"This is our report of the Labor Force Statistics Dataset from the ",
a(href = "https://data.bls.gov/cgi-bin/surveymost?ln", "U.S. Bureau of Labor Statistics"),
)
)
total_votes_sidebar <- sidebarPanel(
p("Find population"),
selectInput(
inputId = "state",
label = h3("Choose a state"),
choices = us_election$state
)
)
# education graph itself
# population
total_votes_content <- mainPanel(
plotlyOutput("total_votes_graph")
)
us_election <- county_statistics_1_copy %>%
select(state, votes20_Donald_Trump, votes20_Joe_Biden, total_votes20, TotalPop, county, White, Asian, Black, Hispanic, Pacific)
setwd("~/Desktop/info_201_group/project-info201/ui")
us_election <- county_statistics_1_copy %>%
select(state, votes20_Donald_Trump, votes20_Joe_Biden, total_votes20, TotalPop, county, White, Asian, Black, Hispanic, Pacific)
runApp()
us_election <- county_statistics_1_copy %>%
select(state, votes20_Donald_Trump, votes20_Joe_Biden, total_votes20, TotalPop, county, White, Asian, Black, Hispanic, Pacific)
setwd("~/Desktop/info_201_group/project-info201")
county_statistics_1_copy <- read_csv("county_statistics (1) copy.csv")
library(readr)
county_statistics_1_ <- read_csv("data/county_statistics (1).csv")
View(county_statistics_1_)
runApp('ui')
runApp('ui')
runApp('ui')
setwd("~/Desktop/info_201_group/project-info201")
setwd("~/Desktop/info_201_group/project-info201/ui")
runApp()
setwd("~/Desktop/info_201_group/project-info201/ui")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
county_statistics_1_copy <- read_csv("county_statistics (1) copy.csv")
us_election <- county_statistics_1_copy %>%
select(state, votes20_Donald_Trump, votes20_Joe_Biden, total_votes20, TotalPop, county, White, Asian, Black, Hispanic, Pacific)
county_statistics_1_copy <- read_csv("county_statistics (1) copy.csv")
runApp()
state

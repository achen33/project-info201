)
)
vis_page <- tabPanel(
"Visualization Page",
sidebarLayout( # lay out passed content into 2 cols
sidebarPanel( # lay out passed content inside 'sidebar' col
p("This is where I display the widgets"),
selectInput(
inputId = "populations_id",
label = h3("Country Population"),
choices = pop2018$country
)
),
mainPanel( # lay out passed content in 'main' col
h2("Climate Change Visualization"),
p("This is where I display an interactive visualization and do my analysis"),
plotOutput(outputId = "country_pop")
)
)
)
library(shiny)
# Define server logic required to draw a histogram
shinyServer(function(input, output) {
output$country_pop <- renderPlot({
pop2018_updated <- pop2018 %>%
filter(country == input$populations_id)
ggplot(data = pop2018_updated) +
geom_col(mapping = aes(x = input$populations_id, y = population)) +
labs(x = "County", y = "Population")
})
})
climate <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
# example
# find pop of each country and world in 2018
pop2018 <- climate %>%
filter(year == 2018) %>%
filter(iso_code != "") # filter out blank ISO; only country
# my idea
# find what year each county had highest c02 emissions
# highest_c02_year <- climate %>%
#group_by(country) %>%
#filter(co2 == max(co2)) %>%
#filter(iso_code !=)
# example
# intro page/topic
intro_page <- tabPanel(
"Introduction",
mainPanel(
h2("Topic introduction"),
p("Introduce topic here and write summary stats.")
)
)
# example
# visualization page
vis_page <- tabPanel(
"Visualization Page",
sidebarLayout( # lay out passed content into 2 cols
sidebarPanel( # lay out passed content inside 'sidebar' col
p("This is where I display the widgets"),
selectInput(
inputId = "populations_id",
label = h3("Country Population"),
choices = pop2018$country
)
),
mainPanel( # lay out passed content in 'main' col
h2("Climate Change Visualization"),
p("This is where I display an interactive visualization and do my analysis"),
plotOutput(outputId = "country_pop")
)
)
)
# example
# render fluid page
ui <- fluidPage(
h1("Climate Change Site"),
navbarPage(
inverse = TRUE,
"Climate Change Demo",
intro_page,
vis_page
)
)
pop2018 <- climate %>%
filter(year == 2018) %>%
filter(iso_code != "") # filter out blank ISO; only country
library(shiny)
library(shiny) # for applicationn
library(tidyverse)
library(plotly)
climate <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
pop2018 <- climate %>%
filter(year == 2018) %>%
filter(iso_code != "") # filter out blank ISO; only country
# my id
intro_page <- tabPanel(
"Introduction",
mainPanel(
h2("Topic introduction"),
p("Introduce topic here and write summary stats.")
)
)
vis_page <- tabPanel(
"Visualization Page",
sidebarLayout( # lay out passed content into 2 cols
sidebarPanel( # lay out passed content inside 'sidebar' col
p("This is where I display the widgets"),
selectInput(
inputId = "populations_id",
label = h3("Country Population"),
choices = pop2018$country
)
),
mainPanel( # lay out passed content in 'main' col
h2("Climate Change Visualization"),
p("This is where I display an interactive visualization and do my analysis"),
plotOutput(outputId = "country_pop")
)
)
)
ui <- fluidPage(
h1("Climate Change Site"),
navbarPage(
inverse = TRUE,
"Climate Change Demo",
intro_page,
vis_page
)
)
library(shiny)
# Define server logic required to draw a histogram
shinyServer(function(input, output) {
output$country_pop <- renderPlot({
pop2018_updated <- pop2018 %>%
filter(country == input$populations_id)
ggplot(data = pop2018_updated) +
geom_col(mapping = aes(x = input$populations_id, y = population)) +
labs(x = "County", y = "Population")
})
})
runApp('Desktop/info_201/a4-hadardolev/ui')
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
climate <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
#
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
library(dyplr)
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
israel_us <- climate %>%
filter(year == 2018) %>%
filter(iso_code != "") # filter out blank ISO; only country
climate <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
# example
# find pop of each country and world in 2018
pop2018 <- climate %>%
filter(year == 2018) %>%
filter(iso_code != "") # filter out blank ISO; only country
pop2018 <- climate %>%
filter(year == 2018) %>%
filter(iso_code != "") # filter out blank ISO; only country
pop2018 <- climate %>%
filter(year == 2018) %>%
filter(iso_code != "") # filter out blank ISO; only country
intro_page <- tabPanel(
"Introduction",
mainPanel(
h2("Topic introduction"),
p("Introduce topic here and write summary stats.")
)
)
intro_page <- tabPanel(
"Introduction",
mainPanel(
h2("Topic 6666 introduction"),
p("Introduce topic here and write summary stats.")
)
)
israel_us <- climate_change %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
shinyServer(function(input, output) {
output$country_pop <- renderPlot({
israel_us_specific <- israel_us %>%
filter(country == input$populations_id)
ggplot(data = pop2018_updated) +
geom_col(mapping = aes(x = input$populations_id, y = population)) +
labs(x = "County", y = "Population")
})
})
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
updated <- israe_us %>%
filter(country == input$country) %>%
select(consumption_c02_per_capita, year, country)
shinyApp(ui = ui, server = server)
climate
climate <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
View(climate)
View(climate)
View(climate)
View(climate)
shinyServer(function(input, output) {
output$consumption_co2_per_capita <- renderPlot({
updated <- israel_us %>%
filter(country == input$country) %>%
select(consumption_co2_per_capita, year, country)
ggplot(data = updated) +
geom_col(mapping = aes(x = year, y = consumption_co2_per_capita)) +
labs(x = "year", y = "Consumption of CO2 per Capita")
})
})
runApp('Desktop/info_201/a4-hadardolev/ui')
population_table <- israel_us %>%
filter(year == "2018") %>%
select(population , country)
israel_population <- population_table %>%
filter(country == "Israel") %>%
select(population) %>%
pluck(1)
usa_population <- population_table %>%
filter(country == "United States") %>%
select(population) %>%
pluck(1)
population_table <- israel_us %>%
filter(year == "2018") %>%
select(population , country)
israel_population <- population_table %>%
filter(country == "Israel") %>%
select(population) %>%
pluck(1)
usa_population <- population_table %>%
filter(country == "United States") %>%
select(population) %>%
pluck(1)
usa_population <- population_table %>%
filter(country == "United States") %>%
select(population) %>%
pluck(1)
population_table <- israel_us %>%
filter(year == "2018") %>%
select(population , country)
israel_population <- population_table %>%
filter(country == "Israel") %>%
select(population) %>%
pluck(1)
usa_population <- population_table %>%
filter(country == "United States") %>%
select(population) %>%
pluck(1)
#
pop_difference <- (usa_population -  israel_population)
israel_energy_pc <- israel_us %>%
filter(country == "Israel") %>%
filter(year == "2000" | year == "2016") %>%
select(energy_per_capita, year)
isr_energy_2000 <- israel_energy_pc %>%
filter (year == "2000") %>%
select(energy_per_capita) %>%
pluck(1)
isr_energy_2016 <- israel_energy_pc %>%
filter (year == "2016") %>%
select(energy_per_capita) %>%
pluck(1)
#
isr_diff_energy_pc <- isr_energy_2000 - isr_energy_2016
usa_energy_pc <- israel_us %>%
filter(country == "United States") %>%
filter(year == "2000" | year == "2016") %>%
select(energy_per_capita, year)
usa_energy_2000 <- usa_energy_pc %>%
filter (year == "2000") %>%
select(energy_per_capita) %>%
pluck(1)
usa_energy_2016 <- usa_energy_pc %>%
filter (year == "2016") %>%
select(energy_per_capita) %>%
pluck(1)
#
usa_diff_energy_pc <- usa_energy_2000 - usa_energy_2016
isr_max_co2_year <- israel_us %>%
filter(country == "Israel")
#
isr_max_year_co2 = summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
isr_max_year_co2
summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
runApp('Desktop/info_201/a4-hadardolev/ui')
usa_max_co2_year <- israel_us %>%
filter(country == "United States")
usa_max_year_co2 = summarise(usa_max_co2_year,
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
View(usa_max_year_co2)
usa_max_co2_year <- israel_us %>%
filter(country == "United States")
summarise(usa_max_co2_year,
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita)
pluck(1)
isr_max_year_co2 = summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita)
pluck(1)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita) %>%
pluck(1)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE))
View(usa_max_year_co2)
usa_max_co2_year <- israel_us %>%
filter(country == "United States")
View(usa_max_year_co2)
usa_max_co2_year <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States")
View(usa_max_year_co2)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States")
View(usa_max_co2_years)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
filter(gas_co2_per_capita == usa_max_year_co2)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
filter(gas_co2_per_capita == usa_max_year_co2)
#change over time of consumption co2 per captia 2000 -> 2018 USA
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE))
usa_max_year_co2
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
filter(year == usa_max_year_co2)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE))
View(usa_max_co2_years)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States")
View(usa_max_co2_years)
isr_max_co2_year <- israel_us %>%
filter(country == "Israel")
isr_max_year_co2 = summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
isr_max_year_co2
isr_max_year_co2
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "Israel") %>%
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
usa_max_year_co2
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "Israel")
usa_max_co2_years
runApp('Desktop/info_201/a4-hadardolev/ui')
vis_page <- tabPanel(
"Visualization Page",
sidebarLayout( # lay out passed content into 2 cols
sidebarPanel( # lay out passed content inside 'sidebar' col
p("Consumption CO2 per capita"),
selectInput(
inputId = "country",
label = h3("Choose a country"),
choices = israel_us$country
)
),
mainPanel( # lay out passed content in 'main' col
h2("Climate Change Visualization"),
p("This is where I display an interactive visualization and do my analysis"),
plotOutput(outputId = "consumption_co2_per_capita")
)
)
)
install.packages("manipulateWidget")
shinyServer(function(input, output) {
output$consumption_co2_per_capita <- renderPlot({
updated <- israel_us %>%
filter(country == input$country) %>%
select(consumption_co2_per_capita, year, country)
ggplot(data = updated) +
geom_line(mapping = aes(x = year, y = consumption_co2_per_capita)) +
labs(x = "year", y = "Consumption of CO2 per Capita")+
xlim(1990, 2018)
})
})
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
intro_page <- tabPanel(
"Introduction",
mainPanel(
h2("Climate change in Israel and United States"),
p("As a Israeli American student, being aware of how both the countries
I call home try to limit their footprint in climate change. As both Israel
and the US are very technology advanced, its intresting to see how they chose
to use it for the fight against climate change. Since the US has 318714000 more
residents than Israel, my tables and stats are all based on per capita.
The hange over time of energy consumption per capita used in 2000-2016
in israel is 3691.67 while in the USA its 13553.The year where there was the max
consumption of CO2 per capita in the US was 2014 and Israel was 2018."),
img( src = "https://clayhiggins.house.gov/sites/clayhiggins.house.gov/files/styles/congress_featured_image/public/featured_image/usa-israel.png?itok=TfoYlpB4")
)
)
# visualization page
vis_page <- tabPanel(
"Visualization Page",
sidebarLayout( # lay out passed content into 2 cols
sidebarPanel(
p("Consumption CO2 per capita"),
selectInput(
inputId = "country",
label = h3("Choose a country"),
choices = israel_us$country
)
),
mainPanel( # lay out passed content in 'main' col
h2("Climate Change Visualization"),
plotOutput(outputId = "consumption_co2_per_capita"),
p("As shown in the charts above both Israel and the US have been taking action to consume less CO2. Currently, Israel consumes less
CO2 than the USA. It's interesting to look at the USA and how the numbers change based on the president of the time. I was surprised to see
the slope after 2009 when Obama was president, and how during Trumps
the term the slop was less steep.")
)
)
)
ui <- fluidPage(
h1("Climate Change POV"),
navbarPage(
inverse = TRUE,
"Climate Change Demo",
intro_page,
vis_page
)
)
shiny::runApp('Desktop/info_201_group/project-info201/ui')
runApp('Desktop/info_201_group/project-info201/ui')
state
runApp('Desktop/info_201_group/project-info201/ui')
setwd("~/Desktop/info_201_group/project-info201")
runApp('ui')
setwd("~/Desktop/info_201_group/project-info201/ui")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
output$value <- renderPrint({input$radio})
runApp()
here
hello
runApp()
county_statistics_1_copy <- read_csv("county_statistics (1) copy.csv")
us_election <- county_statistics_1_copy %>%
select(state, votes20_Donald_Trump, votes20_Joe_Biden, total_votes20, TotalPop, county, White, Asian, Black, Hispanic, Pacific, Native)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()

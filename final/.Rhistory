library(shiny)
library(tidyverse)
library(plotly)
intro_page <- tabPanel(
"Introduction",
mainPanel(
textOutput("avg"),
textOutput("max"),
textOutput("min"),
textOutput("max_value"),
textOutput("min_value"),
h2("CO2 Emissions Per Capita in 2018"),
p("With this data, I focused in on the country data for the year 2018. I
calculated the average CO2 emissions per capita in each country in 2018.
Afterwards,I caluculated the countries with the least and most carbon
emissions per capita in the year 2018. And lastly, I calculated the ratio
and difference between these two countries.")
)
)
interactive_visual <- tabPanel(
"Visualization Page",
sidebarLayout(
sidebarPanel(
p("This widgets show the CO2 emissions in each country in the year 2018
per their human capita."),
selectInput(
inputId = "co2_per_capita_id",
label = h3("Country CO2 Per Capita"),
choices = data2018$country
)
),
sidebarPanel(
p("These widgets show the population of each country in order to compare
the co2 emissions based on the population."),
selectInput(
inputId = "population",
label = h3("Country Population"),
choices = data2018$country
)
),
mainPanel(
h2("Climate Change Visualization"),
p("This interactive visualization shows the CO2 emissions per capita in
each given country."),
plotOutput(
outputId = "co2_per_capita",
width = "100%",
height = "400px",
click = NULL,
dblclick = NULL,
hover = NULL,
brush = NULL,
inline = FALSE
),
)
)
)
ui <- fluidPage(
h1("Climate Change Data"),
navbarPage(
inverse = TRUE,
"Climate Change Analysis", # app title
intro_page,
interactive_visual
)
)
library(shiny)
library(tidyverse)
library(plotly)
data <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
## Values of Interest
## Basic Exploration
num_col <- ncol(data)
num_row <- nrow(data)
num_country <- length(unique(data$country))
num_year <- length(unique(data$year))
data2018 <- data %>%
filter(year == 2018) %>%
filter(iso_code != "")
# Average CO2 per capita in each country in 2018?
avg_co2 <- data2018 %>%
summarise(co2_per_capita = mean(co2_per_capita, na.rm = TRUE)) %>%
pull(co2_per_capita)
print(avg_co2)
# What country had the highest CO2 per capita in 2018?
max_country <- data2018 %>%
filter(co2_per_capita == max(co2_per_capita, na.rm = TRUE)) %>%
pull(country)
# What country had the lowest CO2 per capita in 2018?
min_country <- data2018 %>%
filter(co2_per_capita == min(co2_per_capita, na.rm = TRUE)) %>%
pull(country)
# What is the amount of CO2 emission in the country with the highest in 2018?
max_country_co2 <- data2018 %>%
filter(co2_per_capita == max(co2_per_capita, na.rm = TRUE)) %>%
pull(co2_per_capita)
# What is the amount of CO2 emission in the country with the lowest in 2018?
min_country_co2 <- data2018 %>%
filter(co2_per_capita == min(co2_per_capita, na.rm = TRUE)) %>%
pull(co2_per_capita)
server <- function(input, output) {
output$avg <- renderText({
avg_co2
})
output$max <- renderText({
max_country
})
output$min <- renderText({
min_country
})
output$max_value <- renderText({
max_country_co2
})
output$min_value <- renderText({
min_country_co2
})
output$country_co2 <- renderPlot({
data2018_updated <- data2018 %>%
filter(country == input$co2_per_capita_id)
ggplot(data = data2018_updated) +
geom_col(mapping = aes(x = input$co2_per_capita_id))
labs(x = "Country", y = "CO2 Per Capita")
})
}

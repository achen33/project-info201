israel_population <- population_table %>%
filter(country == "Israel") %>%
select(population) %>%
pluck(1)
usa_population <- population_table %>%
filter(country == "United States") %>%
select(population) %>%
pluck(1)
population_table <- israel_us %>%
filter(year == "2018") %>%
select(population , country)
israel_population <- population_table %>%
filter(country == "Israel") %>%
select(population) %>%
pluck(1)
usa_population <- population_table %>%
filter(country == "United States") %>%
select(population) %>%
pluck(1)
usa_population <- population_table %>%
filter(country == "United States") %>%
select(population) %>%
pluck(1)
population_table <- israel_us %>%
filter(year == "2018") %>%
select(population , country)
israel_population <- population_table %>%
filter(country == "Israel") %>%
select(population) %>%
pluck(1)
usa_population <- population_table %>%
filter(country == "United States") %>%
select(population) %>%
pluck(1)
#
pop_difference <- (usa_population -  israel_population)
israel_energy_pc <- israel_us %>%
filter(country == "Israel") %>%
filter(year == "2000" | year == "2016") %>%
select(energy_per_capita, year)
isr_energy_2000 <- israel_energy_pc %>%
filter (year == "2000") %>%
select(energy_per_capita) %>%
pluck(1)
isr_energy_2016 <- israel_energy_pc %>%
filter (year == "2016") %>%
select(energy_per_capita) %>%
pluck(1)
#
isr_diff_energy_pc <- isr_energy_2000 - isr_energy_2016
usa_energy_pc <- israel_us %>%
filter(country == "United States") %>%
filter(year == "2000" | year == "2016") %>%
select(energy_per_capita, year)
usa_energy_2000 <- usa_energy_pc %>%
filter (year == "2000") %>%
select(energy_per_capita) %>%
pluck(1)
usa_energy_2016 <- usa_energy_pc %>%
filter (year == "2016") %>%
select(energy_per_capita) %>%
pluck(1)
#
usa_diff_energy_pc <- usa_energy_2000 - usa_energy_2016
isr_max_co2_year <- israel_us %>%
filter(country == "Israel")
#
isr_max_year_co2 = summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
isr_max_year_co2
summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
runApp('Desktop/info_201/a4-hadardolev/ui')
usa_max_co2_year <- israel_us %>%
filter(country == "United States")
usa_max_year_co2 = summarise(usa_max_co2_year,
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
View(usa_max_year_co2)
usa_max_co2_year <- israel_us %>%
filter(country == "United States")
summarise(usa_max_co2_year,
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita)
pluck(1)
isr_max_year_co2 = summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita)
pluck(1)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
select(gas_co2_per_capita) %>%
pluck(1)
usa_max_co2_year <- israel_us %>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE))
View(usa_max_year_co2)
usa_max_co2_year <- israel_us %>%
filter(country == "United States")
View(usa_max_year_co2)
usa_max_co2_year <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States")
View(usa_max_year_co2)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States")
View(usa_max_co2_years)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
filter(gas_co2_per_capita == usa_max_year_co2)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
filter(gas_co2_per_capita == usa_max_year_co2)
#change over time of consumption co2 per captia 2000 -> 2018 USA
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE))
usa_max_year_co2
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)) %>%
filter(year == usa_max_year_co2)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
summarise(usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE))
View(usa_max_co2_years)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States") %>%
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "United States")
View(usa_max_co2_years)
isr_max_co2_year <- israel_us %>%
filter(country == "Israel")
isr_max_year_co2 = summarise(isr_max_co2_year,
isr_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
)
isr_max_year_co2
isr_max_year_co2
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "Israel") %>%
usa_max_year_co2 = max(gas_co2_per_capita, na.rm = TRUE)
usa_max_year_co2
usa_max_co2_years <- israel_us %>%
select(country, year, gas_co2_per_capita)%>%
filter(country == "Israel")
usa_max_co2_years
runApp('Desktop/info_201/a4-hadardolev/ui')
vis_page <- tabPanel(
"Visualization Page",
sidebarLayout( # lay out passed content into 2 cols
sidebarPanel( # lay out passed content inside 'sidebar' col
p("Consumption CO2 per capita"),
selectInput(
inputId = "country",
label = h3("Choose a country"),
choices = israel_us$country
)
),
mainPanel( # lay out passed content in 'main' col
h2("Climate Change Visualization"),
p("This is where I display an interactive visualization and do my analysis"),
plotOutput(outputId = "consumption_co2_per_capita")
)
)
)
install.packages("manipulateWidget")
shinyServer(function(input, output) {
output$consumption_co2_per_capita <- renderPlot({
updated <- israel_us %>%
filter(country == input$country) %>%
select(consumption_co2_per_capita, year, country)
ggplot(data = updated) +
geom_line(mapping = aes(x = year, y = consumption_co2_per_capita)) +
labs(x = "year", y = "Consumption of CO2 per Capita")+
xlim(1990, 2018)
})
})
israel_us <- climate %>%
filter(country == "Israel" | country == "United States") %>%
filter(iso_code != "")
intro_page <- tabPanel(
"Introduction",
mainPanel(
h2("Climate change in Israel and United States"),
p("As a Israeli American student, being aware of how both the countries
I call home try to limit their footprint in climate change. As both Israel
and the US are very technology advanced, its intresting to see how they chose
to use it for the fight against climate change. Since the US has 318714000 more
residents than Israel, my tables and stats are all based on per capita.
The hange over time of energy consumption per capita used in 2000-2016
in israel is 3691.67 while in the USA its 13553.The year where there was the max
consumption of CO2 per capita in the US was 2014 and Israel was 2018."),
img( src = "https://clayhiggins.house.gov/sites/clayhiggins.house.gov/files/styles/congress_featured_image/public/featured_image/usa-israel.png?itok=TfoYlpB4")
)
)
# visualization page
vis_page <- tabPanel(
"Visualization Page",
sidebarLayout( # lay out passed content into 2 cols
sidebarPanel(
p("Consumption CO2 per capita"),
selectInput(
inputId = "country",
label = h3("Choose a country"),
choices = israel_us$country
)
),
mainPanel( # lay out passed content in 'main' col
h2("Climate Change Visualization"),
plotOutput(outputId = "consumption_co2_per_capita"),
p("As shown in the charts above both Israel and the US have been taking action to consume less CO2. Currently, Israel consumes less
CO2 than the USA. It's interesting to look at the USA and how the numbers change based on the president of the time. I was surprised to see
the slope after 2009 when Obama was president, and how during Trumps
the term the slop was less steep.")
)
)
)
ui <- fluidPage(
h1("Climate Change POV"),
navbarPage(
inverse = TRUE,
"Climate Change Demo",
intro_page,
vis_page
)
)
shiny::runApp('Desktop/info_201_group/project-info201/final')
setwd("~/Desktop/info_201_group/project-info201/final")
runApp()
new_election_df <- read_excel("new_election_df.xlsx",
col_types = c("text", "text", "numeric"))
library(readxl)
new_election_df <- read_excel("new_election_df.xlsx",
col_types = c("text", "text", "numeric"))
runApp()
runApp()
table(sapply(new_election_df, class))
list_states <- new_election_df$state
list_states
typeof(list_states)
source("app_ui.R")
source("app_server.R")
shinyApp(ui = ui, server = server)
library(tidyverse)
library(dplyr)
library(plotly)
library(shiny)
library(ggplot2)
library(readxl)
new_election_df <- read_excel("new_election_df.xlsx",
col_types = c("text", "text", "numeric"))
# server1 ---------
create_elec_plot <- function(df, sel_states) {
election_color <- c("red", "blue")
df <- df %>%
filter(state == sel_states)
trump_biden_plot <- ggplot(data = df, aes(x = candidate, y = votes)) +
geom_bar(stat='identity')
}
# server2 output plot ---------
server <- function(input, output) {
new_election_df$candidate <- factor(
new_election_df$candidate,
levels = c("Trump", "Biden")
)
output$trump_biden_plot <- renderPlotly({
return(create_elec_plot(new_election_df, input$sel_states))
})
####################################
output$race_graph <- renderPlot({
race_prop_data <- county_statistics_1_copy %>%
select(state, input$races, White) %>%
gather(key = race, value = population, -state) %>%
output$value <- renderPrint({input$races})
ggplot(data = race_prop_data) +
geom_col(mapping = aes(
x = state,
y = population,
fill = race
)) +
ggtitle("Racial Proportions of State Populations")
})
output$vote_graph <- renderPlot({
votes_2020_data <- county_statistics_1_copy %>%
select(state == input$states) %>%
group_by(state) %>%
summarize(
voted_trump = sum(votes20_Donald_Trump, na.rm = TRUE),
voted_biden = sum(votes20_Joe_Biden, na.rm = TRUE)
)
output$value <- renderPrint({input$states})
ggplot(data = votes_2020_data) +
geom_point(mapping = aes(
x = voted_trump,
y = voted_biden,
color = state
)) +
ggtitle("Comparison of State Votes for Trump vs. Biden")
})
}
library(shiny)
library(tidyverse)
library(plotly)
library(rsconnect)
library(dplyr)
library(readr)
county_statistics_1_copy <- read_csv("county_statistics (1) copy.csv")
us_election <- county_statistics_1_copy %>%
select(state, votes20_Donald_Trump, votes20_Joe_Biden, total_votes20, TotalPop, county, White, Asian, Black, Hispanic, Pacific, Native)
#filter(iso_code != "")
state_votes <- us_election %>%
group_by(state) %>%
summarize(
voted_trump = sum(votes20_Donald_Trump, na.rm = TRUE),
voted_biden = sum(votes20_Joe_Biden, na.rm = TRUE)
)
turned_state_votes_table <- t(state_votes)
# First Tab which includes the introduction.
intro_panel <- tabPanel(
"Introduction",
titlePanel("title of project"),
p("By: Audrey, Selina, Hadar"),
h3("Introduction"),
img(src = "https://i.guim.co.uk/img/media/ea344028ac2fe5a1c1db9d55adcfaf01951f7777/0_60_3500_2100/master/3500.jpg?width=445&quality=85&auto=format&fit=max&s=433342dd5a78238a336fc994602d1bda",height="400", width="600"),
p("Throughout the years, disparities within voter turnout and trends increasingly
become a topic for heated debated -- This is especially true nearing presidential elections. Such questions that arises are:
- What affects the disparities within voter turnout and trends?
- To what extent does gender (Specifically, male versus female), race or any other
social classifications affect these statistics?
- Which parties/candidates do certain gender and race gear towards? (Waiting on Audrey for   third takeaway)
With that said, we are interested in this because our group feels that issues and
policies in politics are heavily swayed by gender and race. We also recognized that marginalized communities are usually not as representativce in voting, so we centered our study around that. In short, these issues are especially prevalent today as with the most recent election, most ideas were very polarized and driven by prejudices.
For this project, we have been using the data set of `county.csv` to analyze our
question. This data set has an accumulation of voting data and displays the voting information separated by location and the demographic of each location. Honing in on both the 2016 and 2020 presidential election, we observed how
voting trends have differed or stayed the same. From that, we looked at how
gender and race plays a role in the numbers. Specifically, we looked at what the
trends looked like for the white populace versus for marginalized communitiies, as
BIPOC are our target group of focus. ")
)
list_states <- new_election_df$state
# total votes
total_votes_sidebar <- sidebarPanel(
p("Find total votes"),
selectInput(
inputId = "sel_states",
label = "Choose a state",
choices = list_states,
selected = "WA")
)
total_votes_content <- mainPanel(
plotlyOutput("trump_biden_plot")
)
total_votes_panel <- tabPanel(
"Total Votes",
titlePanel("total votes of each state"),
sidebarLayout(total_votes_sidebar,
total_votes_content)
)
# race
race_sidebar <- sidebarPanel(
radioButtons("races", label = h3("Check Race"),
choices = list("White" = us_election$White, "Black" = us_election$Black,
"Hispanic" = us_election$Hispanic,
"Native" = us_election$Native,
"Pacific" = us_election$Pacific, "Asian" = us_election$Asian)
)
)
# race
race_content <- mainPanel(
plotOutput("race_graph")
)
# Race
race_panel <- tabPanel(
"Race Graph",
titlePanel("graph title here"),
sidebarLayout(race_sidebar,
race_content)
)
# vote
vote_sidebar <- sidebarPanel(
checkboxGroupInput("states", label = h3("Choose a state"),
choices = list("AZ" = "AZ" , "CO" = us_election$state , "FL" = us_election$state , "GA" = us_election$state
, "IA" = us_election$state , "MI" = us_election$state , "NC" = us_election$state , "PA" = us_election$state
, "TX" = us_election$state, "WI" = us_election$state)
)
)
# vote
vote_content <- mainPanel(
plotOutput("vote_graph")
)
# vote
vote_panel <- tabPanel(
"Votes Graph",
titlePanel("graph title here"),
sidebarLayout(vote_sidebar,
vote_content)
)
# First Tab which includes the introduction.
summary_panel <- tabPanel(
"Summary",
titlePanel("Summary and Takeaways"),
h3("Education Takeaway"),
p("Our three main takeaways from this research project were surrounding the
focus of race and its effects on voting.
Firstly, when analysing our tables
and visuals displaying the voting disparities within the states and then
comparing these data with the racial breakdowns in each state, we can see that
there is a significant divide in political voting outcomes depending on the
race identities of the citizens. We found that a majority of citizens from a
marginalized community of color typically tended to vote against Trump in the
elections.
Secondly, we noticed that there was a consistent trend in the
Southern states there was a higher percentage of votes for Donald Trump than
those for Joe Biden. Similarly, there was typically a trend for Joe Biden in
the west coast states and in the northeast. We correlated these trends to the
racial breakdowns in theses regions in the United States where individuals of
color typically were the same regions that voted for against Donald Trump.
Lastly, with our charts and widgets analyzing the voting trends in the swing
states of the United States, we found that in the states were closer in the
number of votes, but that ultimately had more Joe Biden votes than Donald
Trump votes, the race populations in these states were less significantly
dispersed, leading to a correlated less dispersed voting trends.
")
)
# Create overall ui by calling the into panel and plot panel
ui <- fluidPage(
navbarPage(
"US Election",
intro_panel,
total_votes_panel,
race_panel,
vote_panel,
summary_panel
)
)
source("app_ui.R")
source("app_server.R")
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
runApp()
shinyApp(ui = ui, server = server)
source("app_ui.R")
source("app_server.R")
runApp()
# server1 ---------
create_elec_plot <- function(df, sel_states) {
election_color <- c("red", "blue")
df <- df %>%
filter(state == sel_states)
trump_biden_plot <- ggplot(data = df, aes(x = candidate, y = votes, color = candidate)) +
geom_bar(stat='identity') +
scale_fill_manual(values = election_color)
}
runApp()
# server1 ---------
create_elec_plot <- function(df, sel_states) {
election_color <- c("blue", "red")
df <- df %>%
filter(state == sel_states)
trump_biden_plot <- ggplot(data = df, aes(x = candidate, y = votes, color = candidate, fill = candidate)) +
geom_bar(stat='identity') +
scale_fill_manual(values = election_color)
}
source("app_ui.R")
source("app_server.R")
shinyApp(ui = ui, server = server)
# server1 ---------
create_elec_plot <- function(df, sel_states) {
election_color <- c("blue", "red")
df <- df %>%
filter(state == sel_states)
trump_biden_plot <- ggplot(data = df, aes(x = candidate, y = votes, color = candidate, fill = candidate)) +
geom_bar(stat='identity') +
scale_color_manual(values = election_color)
scale_fill_manual(values = election_color)
}
source("app_ui.R")
source("app_ui.R")
source("app_server.R")
shinyApp(ui = ui, server = server)
runApp()
output$race_graph <- renderPlot({
race_prop_data <- county_statistics_1_copy %>%
select(state, Hispanic, White, Black, Native, Asian, Pacific) %>%
gather(key = race, value = population, -state)
runApp()
q()
quite
q()
